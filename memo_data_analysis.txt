
어떤 대용량 csv 파일이 있다면
데이터 분석을 어떤 순서로 할 수 있는가???
(숫자는 진행 순서에 가깝다)

1. pandas 패키지 로드
import pandas as pd


2. csv 파일 불러오기
(구글 코랩)
from google.colab import drive
drive.mount('/content/drive')

filename = '주소'
df = pd.read_csv(filename)
df


3. csv 파일의 기본 정보 알아보기
df.columns

* 열(column) 이름 재정의?
new_col = [' ', ' ', ' ', ...]

df.columns = new_col


df.info()
df.describe()
df.shape
df.head() / df.tail()  <-- 상위 5개, 하위 5개 정보만 보기 / df.head(n) : 상위 n개만 보기


4. 데이터 정렬하기(행)
- 오름차순 : df.sort_index()
- 내림차순 : df.sort_index(ascending=False)
* 오름차순 : 1 2 3 4 5 ...


5. 데이터 정렬하기(열, column)
- 오름차순 : df.sort_values(by='키')
- 내림차순 : df.sort_values(by='키', ascending=False)
* 복수정렬?
df.sort_values(by = ['키', '브랜드평판지수'])
df.sort_values(by = ['키', '브랜드평판지수'], ascending=False)


6. column(열) 선택하기
df['혈액형']
df[]
df.혈액형


7. 범위 선택
7-1. 단순 범위 선택
df[:3] = df.head(3)

7-2. loc  (<-- loc, iloc 자주 쓰니까 꼭 알아둘 것)
df.loc[:, '이름']
df.loc[:, ['이름', '생년월일']
df.loc[2:5, ['이름', '생년월일']
* 쉼표(,) 기준으로 왼쪽(:)에는 행, 오른쪽('이름')에는 열
* 2:5에서 넘파이와 다름. 넘파이는 2, 3, 4 / 여기 loc에서는 2, 3, 4, 5

7-3. iloc (이것도 중요한 것이고, iloc는 포지션으로 색인)
df.iloc[:, [0:2])   <-- 행은 모든 행 / 0번째, 1번째 열을 보여줌

df.iloc[1:5, 1:4]
* iloc에서는 numpy와 비슷하게 '미만'으로 인식해서 값을 가져온다.
* 1:5 = 1, 2, 3, 4,


8. Boolean indexing
df['키'] > 180

df[ df['키'] < 170 ]

Q. 지금까진 모든 column을 출력했지만, 특정 column만 출력하려면?
방법1 df[ df['키'] > 180 ['이름' ]

방법2 df.loc[df['키'] > 180, '이름' : '성별']
* 주로 방법2를 추천함


9. isin 색인
내가 조건을 걸고자 하는 값이 내가 정의한 list에 있을 때만 색인하려는 경우

my_condition = ['플레디스', 'SM']
df['소속사'].isin(my_condition)

df.loc[ df['소속사'].isin(my_condition), '소속사']


10. 결측값 알아보기
* NaN : Not a Number, 비어있는 값, 결측값

df.info()
df.isna()
df.isnull()
* True 있는 위치가 빈 값

NaN 값만 뽑아내려면?
df['그룹'][df['그룹'].isnull()]
df['그룹'][df['그룹'].isna()]

NaN 값을 제외하고 뽑아내려면?
df['그룹'][df['그룹'].notnull()]
df.loc[df['그룹'].isnull(), ['키', '혈액형']]